package Model;

public class Fridge extends HomeAppliances{

	/**
	 * Serial version uid
	 */
	private static final long serialVersionUID = 1L;
	
	/**
	 * If the fridge is smart or not
	 */
	private boolean smart;
	
	/**
	 * If the fridge can frost or not
	 */
	private boolean frost;
	
	/**
	* Its the constructor of Fridge 
	* <br><b>Pre:<b> 
	* <br><b>Post:<b> All variables initializated
	* @param: name The fridge name
	* @param: code The fridge code autogenerated
	* @param: price The fridge price
	* @param: description Fridge description to show
	* @param: picture Path of picture to this fridge
	* @param: quantity Quantity of the fridge to sell
	* @param: weight Weight of the fridge
	* @param: capacity Capacity of the fridge
	* @param: wattsConsum Number of watts consum
	* @param: height Height of the fridge
	* @param: widht Width of the frigde
	* @param: smart If the fridge is smart or not
	* @param: frost If the fridge can frost or not
	**/
	public Fridge(String name,String code,double price, String description, String picture, int quantity, double weight, double capacity, double wattsConsum, double height ,double widht, boolean smart, boolean frost) {
		super(name,code,price,description,picture,quantity,weight,capacity,wattsConsum,height,widht);
		this.smart = smart;
		this.frost = frost;
	}

	/**
	 * Allows to obtain the boolean smart of the Fridge
	 * <br>Pre:<b>The Fridge object must be created</b>
	 * <br>Post:<b>obtain the smart boolean of the Fridge saved in variable "smart"</b>
	 * @return smart Return a boolean if the fridge is smart or not
	 */
	public boolean isSmart() {
		return smart;
	}

	/**
	 * Allows entering a new smart boolean for the Fridge
	 * <br>Pre:<b>The Fridge object must be created</b>
	 * <br>Post:<b>the smart boolean will be saved in the variable "smart"</b>
	 * @param smart New value of smart for the fridge
	 */
	public void setSmart(boolean smart) {
		this.smart = smart;
	}

	/**
	 * Allows to obtain the boolean frost of the Fridge
	 * <br>Pre:<b>The Fridge object must be created</b>
	 * <br>Post:<b>obtain the frost boolean of the Fridge saved in variable "frost"</b>
	 * @return frost boolean Return a boolean with if the fridge can frost or not
	 */
	public boolean isFrost() {
		return frost;
	}

	/**
	 * Allows entering a new frost boolean for the Fridge
	 * <br>Pre:<b>The Fridge object must be created</b>
	 * <br>Post:<b>the frost boolean will be saved in the variable "frost"</b>
	 * @param frost boolean if the fridge can frost or not
	 */
	public void setFrost(boolean noFridge) {
		this.frost = noFridge;
	}
	
	/**
	 * Allows to obtain the String smart of the Fridge
	 * <br>Pre:<b>The Fridge object must be created and smart must be entered</b>
	 * <br>Post:<b>obtain the smart String of the Fridge saved in variable "answer"</b>
	 * @return answer Return if te fridge can frost or not
	 */
	public String isSmartString() {
		String answer;
		answer = (smart)?"SI":"NO";
		return answer;
	}
	
	/**
	 * Allows to obtain the String frost of the Fridge
	 * <br>Pre:<b>The Fridge object must be created and noFridge must be entered</b>
	 * <br>Post:<b>obtain the frost String of the Fridge saved in variable "answer"</b>
	 * @return answer Return if the fridge can frost or not
	 */
	public String isFrostString() {
		String answer;
		answer = (frost)?"SI":"NO";
		return answer;
	}
}
